name: '#User Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/app/user
    metadata:
      title: 'List User'
      description: 'List All User'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      filter.created_at:
        name: filter.created_at
        description: 'Filter Fields'
        required: false
        example: null
        type: string
        custom: []
      sort:
        name: sort
        description: 'Sort Fields'
        required: false
        example: created_at
        type: string
        custom: []
      order:
        name: order
        description: 'Order Direction'
        required: false
        example: desc
        type: string
        custom: []
      page:
        name: page
        description: 'Page number to return.'
        required: false
        example: 1
        type: string
        custom: []
      limit:
        name: limit
        description: 'Number of items to return in a page. Defaults to 10.'
        required: false
        example: 10
        type: string
        custom: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/app/user
    metadata:
      title: 'Save User'
      description: 'Save User'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: reprehenderit
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: elza.hayes@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: d
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/app/user/{id}'
    metadata:
      title: 'Show Detail User'
      description: 'Show Detail User'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: kgyjgNv
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/app/user/{id}'
    metadata:
      title: 'Update User'
      description: 'Update Detail User'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: kgyjgNv
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: accusantium
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ajast@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: upwkp
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/app/user/{id}'
    metadata:
      title: 'Delete User'
      description: 'Delete User'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: kgyjgNv
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/app/user/{user_id}/assign-role'
    metadata:
      title: 'Attach Role to User'
      description: 'Attach Role to user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: kgyjgNv
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      roles:
        name: roles
        description: ''
        required: true
        example:
          - quia
        type: 'string[]'
        custom: []
    responses: []
    responseFields: []
